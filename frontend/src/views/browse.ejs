<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <!-- import vue framework -->
    <script type="text/javascript" src="/javascripts/es6-promise.min.js"></script>
    <script type="text/javascript" src="/javascripts/vue.js"></script>
    <link rel="stylesheet" href="/stylesheets/materialize.min.css"/>
    <link rel="stylesheet" href="/stylesheets/style.css"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script type="text/javascript" src="/javascripts/jquery-3.2.1.min.js"></script>
    <!-- import axios for requests -->
    <script type="text/javascript" src="/javascripts/axios.min.js"></script>
    <script src="/javascripts/materialize.min.js"></script>
    <script type="text/javascript" src="/javascripts/moment.min.js"></script>
</head>
<body>

<%- include('partials/navbar') %>

<main id="app">
    <input id="post_id" style="display: none" value="<%=id%>">
    <input id="page_number" style="display: none" value="<%=page%>">
    <input id="filter_by" style="display: none" value="<%=filter%>">
    <input id="sort_by" style="display: none" value="<%=sort%>">
    <div class="page-header browse-page-header">
        <div class="container">
            <h1><%= title %> </h1>
            <% if (browse.disclaimer_boolean){ %>
            <p><%-browse.disclaimer%></p>
            <% } %>
            <div class="row">
                <div class="input-field ">
                    <select id="sortBy" class="col s12 m4">
                        <option value=3 selected>Latest entries</option>
                        <option value=0>Latest posts</option>
                        <option value=1>Most votes</option>
                        <option value=2>Most comments</option>
                    </select>
                    <label>Sort by:</label>
                </div>
                <div class="input-field">
                    <select id="filterBy" class="col s12 m4">
                        <option value=1>Today</option>
                        <option value=0>Last 7 days</option>
                        <!--<option value=2 >Last Month</option>-->
                        <option value=3 selected>All time</option>
                    </select>
                </div>
                <button class="btn btn-flat <%=style.button_1%> <%=style.button_text_1%> offset-m9" @click="filterQuery" style="margin-left: 10px;">Apply</button>
            </div>
            <div class="container" id="filter-wrapper">

                <% if (aFlag) { %>
                <a class="btn-floating btn-flat btn-large waves-effect waves-light <%=style.button_1%>" id="admin-link"
                   href="<%= addition.pLink %>">
                    <i class="material-icons"><img src="/images/icons/24/mode_edit_24.svg" alt="<%= addition.name %>" style="top: 3px;"/></i>
                </a>
                <% } %>

                <!--<div class="btn-floating btn-flat btn-large waves-effect waves-light pink lighten-1" id="filter-toggle"
                     onClick="toggleFilterWrapper()">
                    <i class="material-icons"><img src="/images/icons/24/filter_list_24.svg" style="top: 3px;"/></i>
                    <!-- Filter
                </div>-->

                <!-- FILTER AND SORT CONTENT -->

                <!--<div id="filter-controls">

                    <div class="input-field">
                        <select id="sortBy">
                            <option value=0 selected>Latest</option>
                            <option value=1>Most votes</option>
                            <option value=2>Most comments</option>
                        </select>
                        <label>Sort by:</label>
                    </div>

                    <div class="input-field">
                        <select id="filterBy">
                            <option value=1>Today</option>
                            <option value=0>This week</option>
                            <option value=2 selected>This month</option>
                            <option value=3>All time</option>
                        </select>
                        <label>Filter by:</label>
                    </div>

                    <button class="btn btn-flat pink lighten-1 white-text" @click="filterQuery">Apply</button>
                    <div class="clearfix"></div>
                </div>
                <div class="clearfix"></div>
            </div> -->

        </div>
    </div>

    <div class="container">

        <!-- Tabs content -->
        <!-- <div class="pagination center">
          <button v-if="pagination.current > 1" class="btn <%=style.pagination_button_1%>" @click="requestData(cat, (pagination.current-2) * pagination.per_page, ord, scp)"
            :disabled="!pagination.prev">
            Prev
          </button>
          <span v-cloak>Page {{pagination.current}}</span>
          <button v-if="pagination.last >= pagination.per_page" class="btn <%=style.pagination_button_1%>" @click="requestData(cat, pagination.current * pagination.per_page, ord, scp)"
            :disabled="!pagination.last">
            Next
          </button>
        </div> -->

        <div id="search">
            <%- include('partials/main/search') %>
        </div>

    </div>
    <div class="center-align" id="no_posts_message" v-show="(pagination.current === 1 && items.length === 0)">
        <h6><%=browse.placeholder%></h6>
        <p> Please feel free to <a href="./create">post</a> a first message if you find this category empty.</p>
    </div>
    <div class="pagination center">
        <button v-if="pagination.current > 1" class="btn <%=style.pagination_button_1%>"
                @click="requestData(cat, (pagination.current-2) * pagination.per_page, ord, scp)"
                :disabled="!pagination.prev">
            Prev
        </button>
        <span>Page {{pagination.current}}</span>
        <button v-if="pagination.last >= pagination.per_page" class="btn <%=style.pagination_button_1%>"
                @click="requestData(cat, pagination.current * pagination.per_page, ord, scp)"
                :disabled="!pagination.last">
            Next
        </button>
    </div>

    </div>
</main>

<%- include('partials/footer') %>


<!-- Post template -->
<template id="post-template">
    <div class="message-panel" :id="item.id">

        <div class="message-panel--header">
            <span class="category-label" v-show="item.edit_status" :id="'textedition_sign'+ item.id" style="color: #310c58"><strong>moderated</strong></span>
            <div class="category-label" v-for="cat in item.cat_name">
                {{cat}}
            </div>
            <div class="date">{{datetime(item.timestamp)}}</div>
        </div>

        <div class="message-panel--content">
            <p id="message_text"><img src="/images/icons/24/format_quote.svg" id="flipped-image"/>{{ item.text }}.<img
                        src="/images/icons/24/format_quote.svg" style="vertical-align: bottom"/></p>
        </div>

        <div class="message-panel--footer">
            <div class="row">
                <div class="col s6 valign-wrapper">
                    <div class="child left" id="votes">VOTES: </div>
                    <div class="child left" id="arrow_up">
                        <span id="arrow_up" :class="{disabled: upvoted}" @click="upvote(item.id)"><img src="/images/icons/24/arrow-up-bold.png"/></span>
                    </div>
                    <div class="child left valign-wrapper" id="score"><span id="score" style="margin: 5px; color: green">{{ votes_up}}</span></div>
                    <div class="child left valign-wrapper" id="score"><span id="score" style="margin: 5px; color: darkred;">{{ votes_down}}</span></div>
                    <div class="child left" id="arrow_down"><span id="arrow_up" @click="downvote(item.id)" :class="{disabled: downvoted}"><img src="/images/icons/24/arrow-down-bold.png"/></span>
                    </div>
                </div>
                <div class="right-align col s6">
                    <a v-bind="{ href:'/system/post?id=' + item.id +'&p=' + page + '&f='+ scp + '&s=' + ord}" class="waves-effect waves-light" type="button"
                       id="comments" value="submit">Comments ({{ item.comments }})<i class="material-icons"><img v-if="item.new_comments" src="/images/icons/24/new_comment_18.svg"/>
                                                                                                            <img v-else src="/images/icons/24/comment_18.svg"/>
                                                                                                            </i></a>
                </div>
                <div class="clearfix"></div>
            </div>
        </div>

    </div>
</template>

<script>
  $(document).ready(function (e) {
    $(".button-collapse").sideNav();
    //to display modified selects
    $('select').material_select();
    document.getElementById('cat_link_li').classList.add('active');
    document.getElementById('feedback_link_3').setAttribute('href', 'http://'+ window.location.host + '/system/feedback');
    var polls_var = <%- JSON.stringify(polls) %>;
    if (polls_var && (polls_var.code === 1)){
      $('.carousel.carousel-slider').carousel({fullWidth: true});
    } else {
      console.log('No polls for you');
    }
  });
</script>

</body>
</html>

<script>
    Vue.component('post', {
        template: '#post-template',
        props: ['item', 'page', 'ord', 'scp'],
        data: function () {
            return {
                upvoted: false,
                downvoted: false,
                votes_up: this.item.votes_up,
                votes_down: this.item.votes_down

            };
        },
        methods: {
            upvote: function (id) {
              if (!this.downvoted){
                this.upvoted = !this.upvoted;
                this.downvoted = false;
                this.requestUpdateVotes(id, 1)
                this.votes_up += 1
              }else{console.log('No upvote')}
            },
            downvote: function (id) {
              if(!this.upvoted){
                this.downvoted = !this.downvoted;
                this.upvoted = false;
                this.requestUpdateVotes(id, 0)
                this.votes_down -= 1
              }else {console.log('No downvote')}
            },
            requestUpdateVotes: function (id, type) {
                var updCmd = {
                    id: id,
                    type: type
                };
                axios.post('/api/update_votes', updCmd)
                    .then(function (response) {
                        console.log(response.data);
                    })
                    .catch(function (error) {
                        console.log(error)
                    })
            },
            datetime: function (time) {
                return moment(time).format("DD.MM.YY a");
            }
        },
//        computed: {
//            votes: function () {
//                if (this.upvoted) {
//                    return this.item.votes_up + this.item.votes_down + 1;
//                } else if (this.downvoted) {
//                    return this.item.votes_up + this.item.votes_down - 1;
//                } else {
//                    return this.item.votes_up + this.item.votes_down;
//                }
//            }
//        }
    })


    var app = new Vue({
        el: "#app",
        data: {
            cat: 0,
            off: 0,
            ord: 0,
            scp: 0,
            items: [],
            item: "",
            category: "All",
            description: "Messages in all categories are displayed here. To only view messages on a specific topic select the corresponding category above. To view messages from specific time periods or to use other criteria use the 'Sort by' option.<br>To watch a brief tutorial on how to use the system please check - <a href='https://youtu.be/-tOViHZ726Y' target='_blank'>https://youtu.be/-tOViHZ726Y</a>",
            categories: [],
            polls: [],
            available_poll: false,
            pagination: {
                current: 1,
                per_page: 10,
                prev: 0,
                last: 1
            },
            first: false
        },
        methods: {
            requestData: function (cat, offs, ordr, scope) {
                var app = this
                if (!((cat === app.cat) && (offs === app.off) && app.first && (ordr === app.ord) && (scope === app.scp))) {
                    console.log((!((cat === app.cat) && (offs === app.off) && app.first && (ordr === app.ord) && (scope === app.scp))));
                    if (app.first) {
                        app.category = app.categories[cat]['cat_name'];
                        app.description = app.categories[cat]['description'];
                    }
                    app.first = true;
                    app.cat = cat;
                    app.off = offs;
                    app.ord = ordr;
                    app.scp = scope;

                    var command = {
                        category: cat,
                        offset: offs,
                        order: ordr,
                        scope: scope
                    };

                    document.getElementById('email_progress').style.display = "block";
                    axios.post('/api/get_pub_messages', command)
                        .then(function (response) {
                            //app.$set('items', response.data.data);

                            app.items = response.data.data;
                            //console.log(response.data);
                            document.getElementById('email_progress').style.display = "none";
                            app.makePagination(response.data.pagination)
                        })
                        .catch(function (error) {
                            document.getElementById('email_progress').style.display = "none";
                            app.items = [{"text": error}];
                        })
                }
            },

            filterQuery: function () {

                var sort = parseInt(document.getElementById('sortBy').value);
                var filter = parseInt(document.getElementById('filterBy').value);
                this.requestData(this.cat, 0, sort, filter);
            },

            makePagination: function (pag) {
                app.pagination = {
                    current: pag.current_page,
                    per_page: pag.per_page,
                    prev: pag.current_page - 1,
                    last: pag.last
                }
            },

            requestCategories: function () {
                var app = this;
                //app.items = [];
                //document.getElementById('email_progress').style.display = "block";
                axios.get('/api/categories')
                    .then(function (response) {
                        app.categories = response.data.data;
                        console.log(response.data.data);
                        //document.getElementById('email_progress').style.display = "none";
                    })
                    .catch(function (error) {
                        //document.getElementById('email_progress').style.display = "none";
                        app.categories = [{"text": error}];
                    })

            },

            chosen_cat: function (id) {
                if (id === this.cat) {
                    return 'background-color: <%=style.chosen_category%>;'
                } else {
                    //return 'background-color: #310C58'
                }
            }
        },
        mounted: function () {
          //default: 0,0,3,2
          console.log(parseInt(document.getElementById('sort_by').value));
          console.log(parseInt(document.getElementById('filter_by').value));
            this.requestData(0, (parseInt(document.getElementById('page_number').value)-1)*this.pagination.per_page, parseInt(document.getElementById('sort_by').value), parseInt(document.getElementById('filter_by').value));
            this.requestCategories();
            //this.requestPolls();

        }
    })

</script>

<script type="text/javascript">
    function toggleFilterWrapper() {
        $('#filter-controls').toggleClass('active');
    }

    function submitForm(id) {
        var op = document.querySelector('input[name="option'+id+'"]:checked').value

        if (!isNaN(parseInt(op))){
          var cmd = {
            pollId: id,
            optionNum: op
          };

          axios.post('/api/poll_vote', cmd)
          .then(function (response) {
            console.log(response.data);
            if (response.data.code && response.data.code === 1){
              document.getElementById('poll-question' + id).className += " blurredElement"
              document.getElementById('poll-options' + id).innerHTML = (function(){
                var innerData = '<div class="col s12"><h5 class="white-text">Share your thoughts on this topic <a href="' + response.data.post_link + '">here</a></h5>';
                for (var i=0; i<Object.keys(response.data.data).length; i++){
                  innerData +='<h6 class="white-text">'+ response.data.data[i].option + ' - ' + response.data.data[i].votes + '%</h6>';
                }
                innerData += '</div>';
                return innerData;
              })()
              setTimeout(function(){ $('.carousel').carousel('next'); }, 5000);
            }else if (response.data.code && response.data.code === 0){
              document.getElementById('poll-question' + id).className += " blurredElement"
              document.getElementById('poll-options' + id).innerHTML = "<h4> Thank you for casting your vote </h4>"
              setTimeout(function(){ $('.carousel').carousel('next'); }, 2000);
            }
          })
          .catch(function (error) {
            console.log(error)
          })
        } else {
          Materialize.toast('Please choose one of the options', 4000)
        }
      return false

    }

</script>

<style media="screen">
    #admin-link {
        right: 70px;
    }

    #search {
        padding-bottom: 20px;
    }

    #filter-wrapper {
        padding: 0;
        top: -10px;
        right: 20px;
        position: absolute;
        width: 240px;
        z-index: 2;
    }

    #filter-controls {
        background-color: white;
        box-shadow: 0 0 5px 5px rgba(0, 0, 0, 0.1);
        display: none;
        padding: 20px 30px 20px 30px;
        margin-top: 70px;
        margin-bottom: 20px;
        z-index: 2;
        max-width: 420px;
    }

    #filter-controls.active {
        display: block;
    }

    #filter-toggle {
        cursor: pointer;
        right: 0;
        position: absolute;
    }

    #filter-toggle, #admin-link {
        cursor: pointer;
        text-align: center;
        position: absolute;
    }

    .browse-page-header .container {
        position: relative;
    }

    input[type='radio']:after {
        width: 15px;
        height: 15px;
        border-radius: 15px;
        top: -2px;
        left: -1px;
        position: relative;
        background-color: #d1d3d1;
        content: '';
        display: inline-block;
        visibility: visible;
        border: 2px solid white;
    }

    input[type='radio']:checked:after {
        width: 15px;
        height: 15px;
        border-radius: 15px;
        top: -2px;
        left: -1px;
        position: relative;
        background-color: #ffa500;
        content: '';
        display: inline-block;
        visibility: visible;
        border: 2px solid white;
    }
</style>